variables:
- group: 'Common Variables'

# Only run when main build pipeline completes, and only for stable branch builds
trigger: none
resources:
  pipelines:
    - pipeline: build
      source: EverestAPI.Everest
      trigger:
        branches:
          include:
            - stable

name: '$(Build.BuildId)+$(BuildIdOffset)'

pool:
  vmImage: 'ubuntu-latest'

jobs:
- deployment: Stable
  displayName: 'Publish stable release'

  environment: 'release-stable'

  strategy:
    runOnce:
      deploy:
        steps:
        # Build artifacts are automatically downloaded as part of deployment job

        # Define build_number variable and zip build artifacts
        - script: |
            declare -i BUILD_NUMBER=$(resources.pipeline.build.runID)+$(BuildIdOffset)
            echo "##vso[task.setvariable variable=build_number]$BUILD_NUMBER"

            zip -9r ../main.zip main
            zip -9r ../olympus-meta.zip olympus-meta
            zip -9r ../olympus-build.zip olympus-build
            zip -9r ../lib-stripped.zip lib-stripped
          displayName: 'Prepare release artifacts'
          workingDirectory: $(Pipeline.Workspace)/build

        # Create GitHub release for new stable versions.
        - task: GitHubRelease@1
          displayName: 'Create GitHub Release'
          inputs:
            githubConnection: 0x0ade-bot
            repositoryName: EverestAPI/Everest
            action: 'create'
            target: '$(Build.SourceVersion)'
            tagSource: 'userSpecifiedTag'
            tag: 'stable-1.$(build_number).0'
            title: 'Stable Build $(build_number)'
            assets: |
              $(Pipeline.Workspace)/main.zip
              $(Pipeline.Workspace)/olympus-meta.zip
              $(Pipeline.Workspace)/olympus-build.zip
              $(Pipeline.Workspace)/lib-stripped.zip

      on:
        success:
          steps:
          # Announce new stable versions on Discord (#modding_updates).
          - script: |
              # recalculated because sharing variables between stages is messy
              declare -i BUILD_NUMBER=$(resources.pipeline.build.runID)+$(BuildIdOffset)
              curl -H "Content-Type: application/json" \
                -d "{\"content\": \"**A new Everest stable was just released!**\nThe latest stable version is now **$BUILD_NUMBER**.\"}" \
                $(WEBHOOK_URL)
            displayName: 'Celeste Discord webhook'
